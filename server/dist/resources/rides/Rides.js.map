{"version":3,"sources":["../../../src/resources/rides/Rides.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA","sourcesContent":["// const mongoose = require('mongoose');\n// const {\n//   GraphQLObjectType,\n//   // GraphQLID,\n//   GraphQLNonNull,\n//   GraphQLString,\n//   GraphQLInt,\n// } = require('graphql');\n\n// const RidesType = new GraphQLObjectType({\n//   name: 'Rides',\n//   description: 'Rides info',\n//   fields: () => ({\n//     driver: { type: new GraphQLNonNull(GraphQLString) },\n//     riders: { type: GraphQLString },\n//     comments: { type: GraphQLString },\n//     origin: { type: new GraphQLNonNull(GraphQLString) },\n//     destination: {\n//       street: { type: GraphQLString },\n//       city: { type: GraphQLString },\n//       state: { type: GraphQLString },\n//       zip: { type: new GraphQLNonNull(GraphQLInt) },\n//       formatted: {\n//         type: GraphQLString,\n//         resolve(obj) {\n//           return obj.street + obj.city + obj.state + obj.zip\n//         }\n//       }\n//     },\n//     departure: { type: new GraphQLNonNull(GraphQLInt) },\n//     arrival: { type: new GraphQLNonNull(GraphQLInt) },\n//     currentLocation: { type: new GraphQLNonNull(GraphQLString) },\n//     departed: { type: new GraphQLNonNull(GraphQLString) }\n//   })\n// });\n\n// const ridesSchema = mongoose.Schema({\n//   driver: {\n//     userID: String,\n//     required: true,\n//     seats: {\n//       type: Number,\n//       required: true\n//     }\n//   },\n//   riders: {\n//     userID: String,\n//   },\n//   comments: {\n//     type: String\n//   },\n//   origin: {\n//     type: String,\n//     required: [true, 'Please enter coordinates' ]\n//   },\n//   destination: {\n//     street: String,\n//     city: String,\n//     state: {\n//         type: String,\n//         enum: ['AL', 'AK', 'AS', 'AZ', 'AR', 'CA', 'CO', 'CT', 'DE', 'DC', 'FM', 'FL', 'GA', 'GU', 'HI', 'ID', 'IL', 'IN', 'IA', 'KS', 'KY', 'LA', 'ME', 'MH', 'MD', 'MA', 'MI', 'MN', 'MS', 'MO', 'MT', 'NE', 'NV', 'NH', 'NJ', 'NM', 'NY', 'NC', 'ND', 'MP', 'OH', 'OK', 'OR', 'PW', 'PA', 'PR', 'RI', 'SC', 'SD', 'TN', 'TX', 'UT', 'VT', 'VI', 'VA', 'WA', 'WV', 'WI', 'WY']\n//     },\n//     zip: {\n//         type: Number,\n//         required: [true, 'ZIP code is required'],\n//     },\n//   },\n//   departure: {\n//     type: Date,\n//     required: true\n//   },\n//   arrival: {\n//     type: Date,\n//     required: true\n//   },\n//   currentLocation: {\n//     type: String,\n//     required: true\n//   },\n//   departed: {\n//     type: String,\n//     required: true\n//   }\n// });\n\n// // ridesSchema.methods.graphql = function() {\n// //   // do some graphql manipulation\n// // }\n\n// const Rides = mongoose.model('Rides', ridesSchema);\n\n// module.exports = {\n//   Rides,\n//   RidesType\n// }\n"],"file":"Rides.js"}