{"version":3,"sources":["../../../src/resources/ratings/Ratings.js"],"names":["mongoose","require","GraphQLObjectType","GraphQLID","GraphQLNonNull","GraphQLString","GraphQLEnumType","RatingType","name","description","fields","rater","type","ratee","userType","rides","ratingSchema","Schema","String","required","enum","id","Rating","model","module","exports"],"mappings":";;AAEA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;eAOIA,OAAO,CAAC,SAAD,C;IALTC,iB,YAAAA,iB;IACAC,S,YAAAA,S;IACAC,c,YAAAA,c;IACAC,a,YAAAA,a;IACAC,e,YAAAA,e;;AAGF,IAAMC,UAAU,GAAG,IAAIL,iBAAJ,CAAsB;AACvCM,EAAAA,IAAI,EAAE,QADiC;AAEvCC,EAAAA,WAAW,EAAE,aAF0B;AAGvCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACbC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE,IAAIR,cAAJ,CAAmBC,aAAnB;AAAR,OADM;AAEbQ,MAAAA,KAAK,EAAE;AAAED,QAAAA,IAAI,EAAE,IAAIR,cAAJ,CAAmBC,aAAnB;AAAR,OAFM;AAGbS,MAAAA,QAAQ,EAAE;AAAEF,QAAAA,IAAI,EAAE,IAAIR,cAAJ,CAAmBE,eAAnB;AAAR,OAHG;AAIbS,MAAAA,KAAK,EAAE;AAAEH,QAAAA,IAAI,EAAE,IAAIR,cAAJ,CAAmBE,eAAnB;AAAR;AAJM,KAAP;AAAA;AAH+B,CAAtB,CAAnB;AAWA,IAAMU,YAAY,GAAGhB,QAAQ,CAACiB,MAAT,CAAgB;AACnCN,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEM,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAD4B;AAKnCN,EAAAA,KAAK,EAAE;AACLD,IAAAA,IAAI,EAAEM,MADD;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAL4B;AASnCL,EAAAA,QAAQ,EAAE;AACRF,IAAAA,IAAI,EAAEM,MADE;AAERE,IAAAA,IAAI,EAAE,CAAC,IAAD,EAAO,QAAP,EAAiB,OAAjB;AAFE,GATyB;AAanCL,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEM,MADD;AAELG,IAAAA,EAAE,EAAE;AAFC;AAb4B,CAAhB,CAArB,C,CAmBA;AACA;AACA;;AAEA,IAAMC,MAAM,GAAGtB,QAAQ,CAACuB,KAAT,CAAe,QAAf,EAAyBP,YAAzB,CAAf;AAEAQ,MAAM,CAACC,OAAP,GAAiB;AACfH,EAAAA,MAAM,EAANA,MADe;AAEff,EAAAA,UAAU,EAAVA;AAFe,CAAjB","sourcesContent":["\n\nconst mongoose = require('mongoose');\nconst {\n  GraphQLObjectType,\n  GraphQLID,\n  GraphQLNonNull,\n  GraphQLString,\n  GraphQLEnumType\n} = require('graphql');\n\nconst RatingType = new GraphQLObjectType({\n  name: 'Rating',\n  description: 'Rating info',\n  fields: () => ({\n    rater: { type: new GraphQLNonNull(GraphQLString) },\n    ratee: { type: new GraphQLNonNull(GraphQLString) },\n    userType: { type: new GraphQLNonNull(GraphQLEnumType) },\n    rides: { type: new GraphQLNonNull(GraphQLEnumType) },\n  })\n});\n\nconst ratingSchema = mongoose.Schema({\n  rater: {\n    type: String,\n    required: true\n  },\n  ratee: {\n    type: String,\n    required: true\n  },\n  userType: {\n    type: String,\n    enum: [true, 'Driver', 'Rider']\n  },\n  rides: {\n    type: String,\n    id: []\n  }\n});\n\n// ratingSchema.methods.graphql = function() {\n//   // do some graphql manipulation\n// }\n\nconst Rating = mongoose.model('Rating', ratingSchema);\n\nmodule.exports = {\n  Rating,\n  RatingType\n}\n"],"file":"Ratings.js"}