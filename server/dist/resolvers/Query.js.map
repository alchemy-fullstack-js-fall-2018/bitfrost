{"version":3,"sources":["../../src/resolvers/Query.js"],"names":["require","forwardTo","hasPermission","Query","items","item","itemsConnection","me","parent","args","ctx","info","request","userId","db","query","user","where","id","users","Error","console","log","order","ownsOrder","hasPermissionToSeeOrder","permissions","includes","orders","module","exports"],"mappings":"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","sourcesContent":["const { forwardTo } = require('prisma-binding');\nconst { hasPermission } = require('../utils');\n\nconst Query = {\n  items: forwardTo('db'),\n  item: forwardTo('db'),\n  itemsConnection: forwardTo('db'),\n  me(parent, args, ctx, info) {\n    // check if there is a current user ID\n    if (!ctx.request.userId) {\n      return null;\n    }\n    return ctx.db.query.user(\n      {\n        where: { id: ctx.request.userId },\n      },\n      info\n    );\n  },\n  async users(parent, args, ctx, info) {\n    // 1. Check if they are logged in\n    if (!ctx.request.userId) {\n      throw new Error('You must be logged in!');\n    }\n    console.log(ctx.request.userId);\n    // 2. Check if the user has the permissions to query all the users\n    hasPermission(ctx.request.user, ['ADMIN', 'PERMISSIONUPDATE']);\n\n    // 2. if they do, query all the users!\n    return ctx.db.query.users({}, info);\n  },\n  async order(parent, args, ctx, info) {\n    // 1. Make sure they are logged in\n    if (!ctx.request.userId) {\n      throw new Error('You arent logged in!');\n    }\n    // 2. Query the current order\n    const order = await ctx.db.query.order(\n      {\n        where: { id: args.id },\n      },\n      info\n    );\n    // 3. Check if the have the permissions to see this order\n    const ownsOrder = order.user.id === ctx.request.userId;\n    const hasPermissionToSeeOrder = ctx.request.user.permissions.includes('ADMIN');\n    if (!ownsOrder && !hasPermissionToSeeOrder) {\n      throw new Error('You cant see this buddd');\n    }\n    // 4. Return the order\n    return order;\n  },\n  async orders(parent, args, ctx, info) {\n    const { userId } = ctx.request;\n    if (!userId) {\n      throw new Error('you must be signed in!');\n    }\n    return ctx.db.query.orders(\n      {\n        where: {\n          user: { id: userId },\n        },\n      },\n      info\n    );\n  },\n};\n\nmodule.exports = Query;\n"],"file":"Query.js"}